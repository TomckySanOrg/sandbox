name: Compress Images

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - '**.png'
      - '**.jpg'
      - '**.jpeg'

permissions:
  contents: write
  pull-requests: write

jobs:
  compress-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      #- name: Generate token
      #  id: generate-token
      #  uses: actions/create-github-app-token@v1
      #  with:
      #    app-id: ${{ vars.APP_ID }}
      #    private-key: ${{ secrets.APP_PEM }}

      ## 画像ファイルが変更された場合のみstepを実行
      #- name: Find changed images
      #  id: changed-images
      #  uses: tj-actions/changed-files@v45
      #  with:
      #    files: |
      #      **.jpg
      #      **.jpeg
      #      **.png
      #      **.webp

      - name: Setup Node.js
        #if: steps.changed-images.outputs.any_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install sharp
        #if: steps.changed-images.outputs.any_changed == 'true'
        run: npm install sharp

      - name: Compress images
        #if: steps.changed-images.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const sharp = require('sharp');
            const path = require('path');
            const fs = require('fs').promises;

            const prNumber = context.payload.pull_request.number;
            const files = await github.paginate("GET /repos/{owner}/{repo}/pulls/{pull_number}/files", {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            const imageFiles = files
              .filter(file => /\.(png|jpe?g|gif)$/i.test(file.filename))
              .map(file => file.filename);

            if (imageFiles.length === 0) {
              console.log("No image files changed.");
            } else {
              console.log("Changed image files:");
              imageFiles.forEach(file => console.log(file));
            }

            //async function compressImage(filePath) {
            //  const ext = path.extname(filePath).toLowerCase();
            //  const image = sharp(filePath);
            //  
            //  let options = {};
            //  switch (ext) {
            //    case '.jpg':
            //    case '.jpeg':
            //      options = { quality: 85 };
            //      break;
            //    case '.png':
            //      options = { compressionLevel: 9 };
            //      break;
            //    case '.webp':
            //      options = { quality: 85 };
            //      break;
            //  }
            //  
            //  try {
            //    await image
            //      .resize(2000, 2000, { fit: 'inside', withoutEnlargement: true })
            //      .toBuffer()
            //      .then(data => fs.writeFileSync(filePath, data));
            //    
            //    console.log(`✅ Compressed: ${filePath}`);
            //  } catch (error) {
            //    console.error(`❌ Error compressing ${filePath}:`, error);
            //  }
            //}

            //Promise.all(files.map(compressImage));

      #- name: Commit and push changes
      #  #if: steps.changed-images.outputs.any_changed == 'true'
      #  run: |
      #    git config --global user.name 'github-actions[bot]'
      #    git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      #    git add .
      #    git commit -m "dummy commit." || echo "No changes to commit"
      #    git push origin ${{ github.event.pull_request.head.ref }}

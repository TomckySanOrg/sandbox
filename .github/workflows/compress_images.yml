name: Compress Images

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - '**.png'
      - '**.jpg'
      - '**.jpeg'

permissions:
  contents: write
  pull-requests: write

jobs:
  compress-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Find changed images
        id: changed-images
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **.jpg
            **.jpeg
            **.png

      - name: Setup Node.js
        if: steps.changed-images.outputs.any_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install sharp
        if: steps.changed-images.outputs.any_changed == 'true'
        run: npm install sharp

      - name: Compress images
        if: steps.changed-images.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const sharp = require('sharp');
            const path = require('path');
            const fs = require('fs').promises;

            const commitImageFiles = "${{ steps.changed-images.outputs.all_changed_files }}"
              .split(',')
              .filter(file => ['.png', '.jpg', '.jpeg'].some(ext => file.toLowerCase().endsWith(ext)));

            if (commitImageFiles.length === 0) {
              console.log('最新のコミットに画像ファイルの更新は含まれていません。');
              return;
            }

            async function compressImage(inputPath) {
              console.log('Compressing image:', inputPath);
              try {
                let image = sharp(inputPath);

                // 画像の横幅を確認して1200pxを超えていた場合にリサイズ
                const metadata = await image.metadata();
                if (metadata.width > 1200) {
                  image = image.resize({ width: 1200 });
                  console.log(`Image resized to width 1200px.`);
                }

                // 圧縮
                const quality = 50;  // 圧縮品質（1〜100の範囲で指定）
                const compressionLevel = 9;  // 圧縮レベル（0〜9の範囲で指定）
                const ext = path.extname(inputPath).toLowerCase();
                if (ext === '.png') {
                  image = image.png({ quality, compressionLevel });
                } else {
                  image = image.jpeg({ quality });
                }

                // 圧縮した画像を上書き保存
                const dir = path.dirname(inputPath);
                const tmpPath = path.join(dir, `tmp${ext}`);
                await image.toFile(tmpPath);
                await fs.rename(tmpPath, inputPath);
                console.log(`Image compressed and saved to ${inputPath}`);
              } catch (error) {
                console.error('Error compressing the image:', error);
              }
            }

            await Promise.all(commitImageFiles.map(compressImage));

      - name: Commit and push changes
        if: steps.changed-images.outputs.any_changed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          # 変更された画像ファイルのみを追加
          for file in $(echo "${{ steps.changed-images.outputs.all_changed_files }}" | tr ',' '\n'); do
            git add "$file"
          done
          git commit -m "Compress images with workflow." || echo "No changes to commit"
          git push origin ${{ github.event.pull_request.head.ref }}
